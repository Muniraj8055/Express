Middleware in Express are functions that come into play after the server receives the request and before 
the response is sent to the client. They are arranged in a chain and are called in sequence.

We can use middleware functions for different types of processing tasks required for fulfilling 
the request like database querying, making API calls, preparing the response, etc, and finally calling 
the next middleware function in the chain.

Middleware functions take three arguments: the request object (request), the response object (response), 
and optionally the next() middleware function:

   1. As name suggests it comes in middle of something and that is request and response cycle
   2. Middleware has access to request and response object
   3. Middleware has access to next function of request-response life cycle

   Middleware functions can perform the following tasks:

    Execute any code.
    Make changes to the request and the response objects.
    End the request-response cycle.
    Call the next middleware in the stack.

If the current middleware function does not end the request-response cycle, it must call next() to pass control 
to the next middleware function. Otherwise, the request will be left hanging.

Types of express middleware

   1. Application level middleware app.use
   2. Router level middleware router.use
   3. Built-in middleware express.static,express.json,express.urlencoded
   4. Error handling middleware app.use(err,req,res,next)
   5. Thirdparty middleware bodyparser,cookieparser

   for more details access below link

   https://selvaganesh93.medium.com/how-node-js-middleware-works-d8e02a936113
